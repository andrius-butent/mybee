<?xml version="1.0" encoding="UTF-8"?>
<g:Grid xmlns="http://www.butent.com/column" xmlns:g="http://www.butent.com/grid"
        xmlns:ui="http://www.butent.com/ui"

        name="CargoInvoices" viewName="CargoInvoices"
        editShowId="true" flexGrow="1"
        disabledActions="add"
        caption="=trIncomeInvoices"
        filter="Sale AND !(Proforma)"
>
  <g:columns>
    <SelectionColumn name="Select" width="20" />
    <IdColumn name="ID" caption="=trdInvoiceId" >
      <footer text="=totalOf" horizontalAlignment="right" />
    </IdColumn>
    <DataColumn name="Date" />
    <DataColumn name="Number" />
    <RelColumn name="Operation" filterSupplier="list" />
    <DataColumn name="InvoiceNo" renderColumns="InvoicePrefix InvoiceNo"
                searchBy="InvoicePrefix InvoiceNo" />
    <DataColumn name="Customer" label="=trCustomerId" filterSupplier="value"/>
    <DataColumn name="CustomerName" renderColumns="CustomerName CustomerTypeName"/>
    <DataColumn name="Payer" label="=trdPayerId" filterSupplier="value"/>
    <DataColumn name="PayerName" renderColumns="PayerName PayerTypeName"/>
    <DataColumn name="Amount" >
      <footer aggregate="sum" />
    </DataColumn>
    <DataColumn name="CurrencyName" filterSupplier="list" />

    <PropColumn name="Vat" type="decimal" caption="=printItemVatAmount" format="#.##" >
      <footer aggregate="sum" format="#.##"/>
    </PropColumn>
    <PropColumn name="WithoutVat" type="decimal" caption="=trdAmountWoVat" format="#.##"
                horizontalAlignment="right">
      <render>
        <ui:function>
          if (row.Vat) {
            return Math.round((row.Amount - row.Vat) * 100) / 100;
          } else {
            return row.Amount;
          }
        </ui:function>
      </render>
      <footer aggregate="sum" format="#.##"/>
    </PropColumn>

    <DataColumn name="Term" />

    <RelColumn name="Manager" renderColumns="ManagerFirstName ManagerLastName" filterSupplier="list" />

    <DataColumn name="PaymentTime" />
    <DataColumn name="Paid" >
      <validation>
        <ui:function>
          if (cell.newValue > row.Amount) {
          return $wnd.Bee_maybeTranslate("=maxValue") + " " + row.Amount;
          }
          return null;
        </ui:function>
      </validation>
    </DataColumn>
    <DataColumn name="Debt" format="0.00" >
      <footer aggregate="sum" format="0.00"/>
    </DataColumn>

    <DataColumn name="Vehicle" />
    <DataColumn name="Driver" />
    <DataColumn name="Exported" />

    <CalcColumn type="string" name="Ref" label="Ref.Nr.">
      <render>
        <ui:function>
          if (!row.MinRef) {
            return row.MaxRef;

          } else if(!row.MaxRef || row.MinRef == row.MaxRef) {
            return row.MinRef;

          } else {
            return row.MinRef + ", " + row.MaxRef + (row.CntRef > 2 ? ", ...": "");
          }
        </ui:function>
      </render>
    </CalcColumn>

    <CalcColumn type="string" name="LoadingCountry" label="Iš">
      <render>
        <ui:function>
          if (!row.MinLoadingCountry) {
            return row.MaxLoadingCountry;

          } else if(!row.MaxLoadingCountry || row.MinLoadingCountry == row.MaxLoadingCountry) {
            return row.MinLoadingCountry;

          } else {
            return row.MinLoadingCountry + ", " + row.MaxLoadingCountry
               + (row.CntLoadingCountry > 2 ? ", ...": "");
          }
        </ui:function>
      </render>
    </CalcColumn>

    <CalcColumn type="string" name="LoadingDate" label="Pakrovimas">
      <render>
        <ui:function>
          var minDate = null;
          var maxDate = null;

          if (row.MinLoadingDate) {
            var dt = new Date(row.MinLoadingDate);

            minDate = dt.getFullYear()
              + "-" + (dt.getMonth() &lt; 9 ? "0" : "") + (dt.getMonth() + 1)
              + "-" + (dt.getDate() &lt; 10 ? "0" : "") + dt.getDate();
          }
          if (row.MaxLoadingDate) {
            var dt = new Date(row.MaxLoadingDate);

            maxDate = dt.getFullYear()
              + "-" + (dt.getMonth() &lt; 9 ? "0" : "") + (dt.getMonth() + 1)
              + "-" + (dt.getDate() &lt; 10 ? "0" : "") + dt.getDate();
          }
          if (!minDate) {
            return maxDate;

          } else if(!maxDate || minDate == maxDate) {
            return minDate;

          } else {
            return minDate + ", " + maxDate + (row.CntLoadingDate > 2 ? ", ...": "");
          }
        </ui:function>
      </render>
    </CalcColumn>

    <CalcColumn type="string" name="UnloadingCountry" label="Į">
      <render>
        <ui:function>
          if (!row.MinUnloadingCountry) {
            return row.MaxUnloadingCountry;

          } else if(!row.MaxUnloadingCountry || row.MinUnloadingCountry == row.MaxUnloadingCountry) {
            return row.MinUnloadingCountry;

          } else {
            return row.MinUnloadingCountry + ", " + row.MaxUnloadingCountry
               + (row.CntUnloadingCountry > 2 ? ", ...": "");
          }
        </ui:function>
      </render>
    </CalcColumn>

    <CalcColumn type="string" name="UnloadingDate" label="Iškrovimas">
      <render>
        <ui:function>
          var minDate = null;
          var maxDate = null;

          if (row.MinUnloadingDate) {
            var dt = new Date(row.MinUnloadingDate);

            minDate = dt.getFullYear()
              + "-" + (dt.getMonth() &lt; 9 ? "0" : "") + (dt.getMonth() + 1)
              + "-" + (dt.getDate() &lt; 10 ? "0" : "") + dt.getDate();
          }
          if (row.MaxUnloadingDate) {
            var dt = new Date(row.MaxUnloadingDate);

            maxDate = dt.getFullYear()
              + "-" + (dt.getMonth() &lt; 9 ? "0" : "") + (dt.getMonth() + 1)
              + "-" + (dt.getDate() &lt; 10 ? "0" : "") + dt.getDate();
          }
          if (!minDate) {
            return maxDate;

          } else if(!maxDate || minDate == maxDate) {
            return minDate;

          } else {
            return minDate + ", " + maxDate + (row.CntUnloadingDate > 2 ? ", ...": "");
          }
        </ui:function>
      </render>
    </CalcColumn>
  </g:columns>

  <g:rowStyle>
    <ui:inline>="color:red"</ui:inline>
    <ui:expression>row.Debt &gt; 0 &amp;&amp; row.Term &lt; new Date().getTime()</ui:expression>
  </g:rowStyle>
  <g:rowStyle>
    <ui:inline>="color:green"</ui:inline>
    <ui:expression>row.Debt == 0</ui:expression>
  </g:rowStyle>
</g:Grid>
